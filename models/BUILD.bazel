load("//config:platforms.bzl", "PLATFORMS")

# This BUILD file is simply a namespace separation so that we can show "//models:ds224+" as
# something that makes sense to more Synology people than bog-standard Bazel people.
#
# DO NOT create new targets in the directory; it's a namespace only
#
# All changes are made in the config/platforms.bzl file

constraint_setting(
    name = "synology_model",
)

# to check available models: bazel query 'kind("alias", @rules_synology//models/...)'
[alias(
    # like "ds1819+-7.1"
    name = "{}-{}".format(
        k,
        ".".join(".".join(v["version"].split("-")[:1]).split(".")[:2]),
    ),
    actual = "//platform:{}-{}".format(
        v["synoarch"],
        ".".join(".".join(v["version"].split("-")[:1]).split(".")[:2]),
    ),
) for k, v in PLATFORMS.items()]

filegroup(
    name = "all_models",
    srcs = [
        "{}-{}".format(
            k,
            ".".join(".".join(v["version"].split("-")[:1]).split(".")[:2]),
        )
        for k, v in PLATFORMS.items()
    ],
)

# TL;DR: needed for `bazel test //examples:all_integration_tests`
#
# For Integration Tests -- rules_bazel_integration_test -- every child workspace (ie every example
# that exercises the rules) needs to refer to all the files of the ruleset.  For this reason, we
# have this rule collecting all the files in this "package" for collection at Workspace in
# //:local_repository_files to be passed to the workspace of the child workspace (test example) in
# //examples:BUILD.bazel,
#
# ```
# bazel_integration_test( workspace_files = ...  "//:local_repository_files", ], ... )
# ````
filegroup(
    name = "all_files",
    srcs = glob(["*"]),  # TODO: *.bzl BUILD.bazel
    visibility = ["//:__subpackages__"],
)
