module(name = "examples_cross-helloworld", version = "1.0")

# patch so that i686 is treated like x86_64
archive_override(module_name = "rules_python",
    integrity = "sha256-vgS2Nce+RgS+HvIFQumHCvPEl3jOhB7i2S/LQvnZUWo=",
    patches=[
        "//bzl/patches:chickenandpork-i686-mostly-acts-like-x86_64.patch",
    ],  # patch_strip=1
    strip_prefix = "rules_python-0.35.0",
    urls = [
        "https://github.com/bazelbuild/rules_python/releases/download/0.35.0/rules_python-0.35.0.tar.gz",
    ],
)

bazel_dep(name = "aspect_bazel_lib", version = "2.8.1")
bazel_dep(name = "gazelle", version = "0.39.0")
bazel_dep(name = "platforms", version = "0.0.8")
bazel_dep(name = "rules_go", version = "0.50.1")
bazel_dep(name = "rules_synology")

# When reusing for your own project, don't use this local-override
local_path_override(module_name = "rules_synology", path = "../..")


go_sdk = use_extension("@rules_go//go:extensions.bzl", "go_sdk")

#Download toolchain for this version for both host and some platform targets (maybe the right ones)
go_sdk.download(version = "1.20.5")

# register toolchains by wildcard :) (thanks, github/cameron-martin)
register_toolchains("@rules_synology//toolchains:all")
