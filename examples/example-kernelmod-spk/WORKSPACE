workspace(name = "kernelmod-spk")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive", "http_file")
load("@bazel_tools//tools/build_defs/repo:git.bzl", "git_repository")

# Needed to use the same DRY patch to correct missing and unreachable templates in rules_pkg-0.9.1
local_repository(
    name = "patches",
    path = "../../patches",
)

http_archive(
    name = "bazel_gazelle",
    sha256 = "b7387f72efb59f876e4daae42f1d3912d0d45563eac7cb23d1de0b094ab588cf",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/bazel-gazelle/releases/download/v0.34.0/bazel-gazelle-v0.34.0.tar.gz",
        "https://github.com/bazelbuild/bazel-gazelle/releases/download/v0.34.0/bazel-gazelle-v0.34.0.tar.gz",
    ],
)

http_archive(
    name = "io_bazel_rules_go",
    sha256 = "91585017debb61982f7054c9688857a2ad1fd823fc3f9cb05048b0025c47d023",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/rules_go/releases/download/v0.42.0/rules_go-v0.42.0.zip",
        "https://github.com/bazelbuild/rules_go/releases/download/v0.42.0/rules_go-v0.42.0.zip",
    ],
)

http_archive(
    name = "rules_pkg",
    patch_args = ["-p1"],
    patches = [
        "@patches//:rules_pkg-0.9.1.patch",
    ],
    sha256 = "8f9ee2dc10c1ae514ee599a8b42ed99fa262b757058f65ad3c384289ff70c4b8",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/rules_pkg/releases/download/0.9.1/rules_pkg-0.9.1.tar.gz",
        "https://github.com/bazelbuild/rules_pkg/releases/download/0.9.1/rules_pkg-0.9.1.tar.gz",
    ],
)

# When reusing for your own project, consider using:
#git_repository(
#    name = "rules_synology",
#    remote = "https://github.com/chickenandpork/rules_synology.git",
#    commit = "9e79430c176e94ad6f4e2f5ef38cb30697d3b7ca"
#)
local_repository(
    name = "rules_synology",
    path = "../..",
)

# Application icon, sourced from the cncf.io site
http_file(
    name = "tux_icon",
    sha256 = "36f75566e62856c91e6d4fbfb3722909666be43cec8530f222602cb3fa6de436",
    urls = [
        "https://banner2.cleanpng.com/20180324/toe/kisspng-tux-racer-penguin-linux-clip-art-linux-5ab6fb0d51dbe6.0868076115219412613353.jpg"
    ],
)

http_archive(
    name = "prebuilt_denverton_kmods",
    build_file_content = """filegroup(name="mods", srcs = glob(["net/**"]), visibility = ["//visibility:public"])""",
    sha256 = "cae47a9e2be6bf30f674315ac4153666bb5f488fc10de86cd3fe4336f2aab113",
    urls = [
        "https://github.com/chickenandpork/synology-kmods-netfilter-iptables/releases/download/v1.0.0/denverton-7.2.txz"
    ],
)

load("@rules_pkg//:deps.bzl", "rules_pkg_dependencies")

rules_pkg_dependencies()



load("@io_bazel_rules_go//go:deps.bzl", "go_register_toolchains", "go_rules_dependencies")

go_rules_dependencies()

go_register_toolchains(version = "1.20.5")

load("@bazel_gazelle//:deps.bzl", "gazelle_dependencies")
load("//:bzl/go_dependencies.bzl", "go_dependencies")

# gazelle:repository_macro bzl/go_dependencies.bzl%go_dependencies
go_dependencies()

gazelle_dependencies()

load("@rules_synology//:deps.bzl", synology_deps = "deps")

# Adds in any missing deps not already overridden
# - com_github_aignas_rules_shellcheck
# Adds in toolchain:deps and registers toolchains therein; by convention, the toolchain name
# matches the name of the external repo wrapping the toolchain:
# - name = "arm64_gcc_linux_x86_64",
# - name = "denverton-gcc850_glibc226_x86_64-GPL",
synology_deps()

load("@rules_synology//:go_deps.bzl", synology_go_deps = "deps")

# Adds in any missing golang deps not already overridden
# - name = "com_github_disintegration_imaging",
# - name = "org_golang_x_image" -- as indirect dependency
synology_go_deps()
