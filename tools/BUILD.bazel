load("@gazelle//:def.bzl", "gazelle")
load("@rules_go//go:def.bzl", "go_binary", "go_library")

alias(
    name = "buildifier",
    actual = ":gazelle",
)

# In some ways, having build buildifier and gazelle is redundant

gazelle(name = "gazelle")

go_binary(
    name = "resize",
    embed = [":tools_lib"],
    visibility = ["//visibility:public"],
)

go_library(
    name = "tools_lib",
    srcs = [
        "main.go",
        "resize.go",
    ],
    importpath = "github.com/chickenandpork/rules_synology/tools",
    visibility = ["//visibility:private"],
    deps = [
        "@com_github_disintegration_imaging//:imaging",
        "@com_github_srwiley_oksvg//:oksvg",
        "@com_github_srwiley_rasterx//:rasterx",
        "@org_golang_x_image//draw",
    ],
)

# TL;DR: needed for `bazel test //examples:all_integration_tests`
#
# For Integration Tests -- rules_bazel_integration_test -- every child workspace (ie every example
# that exercises the rules) needs to refer to all the files of the ruleset.  For this reason, we
# have this rule collecting all the files in this "package" for collection at Workspace in
# //:local_repository_files to be passed to the workspace of the child workspace (test example) in
# //examples:BUILD.bazel,
#
# ```
# bazel_integration_test( workspace_files = ...  "//:local_repository_files", ], ... )
# ````
filegroup(
    name = "all_files",
    srcs = glob(["*"]),  # TODO: *.bzl BUILD.bazel
    visibility = ["//:__subpackages__"],
)
