name: Bazel build

env:
  HOMEBREW_NO_AUTO_UPDATE: 1
  # typically used for bazel internal testing: changes outputRoot, sets idletimeout to ~15s
  TEST_TMPDIR: /tmp/bazel

# yamllint disable-line rule:truthy
on:
  pull_request:
    types:
      - opened
      - reopened
  push:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      #-
      #  name: Date-Based Cache key
      #  # get a key showing the current week (ISO: yyyyWww) allowing older caches to age-out/autoprune
      #  id: week
      #  run: echo "::set-output name=iso::$(date +'bazel-%YW%U')"
      #-
      #  uses: bazel-contrib/setup-bazel@0.8.5
      #  with:
      #    # Cache bazel downloads via bazelisk
      #    bazelisk-cache: true
      #    # Store build cache per week
      #    disk-cache: ${{ steps.week.outputs.iso }}
      #    # Share repository cache between workflows.
      #    repository-cache: true
      - uses: actions/checkout@v4.2.2
        # https://github.com/bazelbuild/bazel/issues/11062
      -
        run: bazel run //docs:collate_docs
      -
        run: bazel build //...
      -
        run: bazel test //... --test_output=errors --test_summary=detailed
      -
        name: Integration Tests (ie Examples)
        run: bazel test //examples:all_integration_tests --test_output=errors --test_summary=detailed
      -
        name: Build / Test examples to ensure functionality
        run: |
            for d in $(find examples -name WORKSPACE -o -name MODULE.bazel -exec dirname {} \; ); do
            echo "::group::example: ${d}"
            (cd ${d} && echo "::group::build: ${d}" && bazel build //... );
            #(cd ${d} && test 1 -le $(bazel query 'kind("test", "//...")' 2> /dev/null | wc -l ) && echo "::group::test: ${d}" && bazel test //...);
            echo "::endgroup::"
            done
      -
        run: bazel shutdown
